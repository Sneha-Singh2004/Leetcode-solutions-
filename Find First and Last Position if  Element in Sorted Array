class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int>ans;
        int n=nums.size();
        int left=0;
        int right=n-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[mid]==target){
                int start = mid;
                while (start - 1 >= 0 && nums[start - 1] == target) {
                    start--;
                }
                
                // Find the rightmost position
                int end = mid;
                while (end + 1 < n && nums[end + 1] == target) {
                    end++;
                }
                ans.push_back(start);
                ans.push_back(end);
                return ans;
            }
            else if(nums[mid]<target){
                left=mid+1;
            }
            else{
                right=mid-1;
            }
        }
        return {-1,-1};
        
    }
};
